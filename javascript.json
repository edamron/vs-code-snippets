{
	"React Native Functional Component": {
		"prefix": "rnfc",
		"description": "A complete React Native functional component",
		"body": [
			"//@ts-check",
			"",
			"import React, { useState, useEffect } from 'react';",
			"import PropTypes from 'prop-types';",
			"// React Native ONLY, add other built-in elements as needed (e.g., TouchableOpacity)",
			"// import { StyleSheet, Text, View } from 'react-native';",
			"",
			"const ${1:${TM_FILENAME_BASE}} = ({ ${2:prop1Name}, ${3:prop2Name} }) => {",
			"\treturn (",
			"\t\t<View>",
			"\t\t\t$0",
			"\t\t</View>",
			"\t);",
			"};",
			"",
			"$1.propTypes = {",
			"\t$2: PropTypes.string.isRequired, // <- e.g., a required string",
			"\t$3: PropTypes.func, // <- e.g., an optional function",
			"};",
			"",
			"$1.defaultProps = {",
			"\t$2: 'some string',",
			"\t$3: () => console.log('foo'),",
			"};",
			"",
			"$1.displayName = '$1'",
			"",
			"export default $1;",
			"",
			"// examples styles...modify or remove as needed",
			"const styles = StyleSheet.create({",
			"\tcontainer: {",
			"\t\tbackgroundColor: 'white',",
			"\t\tborderColor: 'black',",
			"\t},",
			"\ttitle: {",
			"\t\tfontSize: 14,",
			"\t\tfontWeight: 'bold',",
			"\t},",
			"});",
		],
	},
	"React Native StyleSheet": {
		"prefix": "rnss",
		"description": "Import and create a React Native StyleSheet object",
		"body": [
			"import { StyleSheet } from 'react-native';",
			"const styles = StyleSheet.create({",
			"\tcontainer: {",
			"\t\tbackgroundColor: 'white',",
			"\t\tborderColor: 'black',",
			"\t},",
			"\ttitle: {",
			"\t\tfontSize: 14,",
			"\t\tfontWeight: 'bold',",
			"\t},",
			"});",
		],
	},
	"React Native Image from Asset": {
		"prefix": "rnia",
		"description": "A React Native image loaded from a local asset",
		"body": "<Image source={ require('../${1:pathToImage}/${2:imageName}.${3:imageExtension}') } />$0",
	},
	"React Native Image from URI": {
		"prefix": "rniu",
		"description": "A React Native image loaded from a web URI",
		"body": "<Image source={{ uri: '${1:imageUri}' }} />$0",
	},
	"React Native DELETE Alert": {
		"prefix": "rna",
		"description": "A React Native 'Delete' alert",
		"body": [
			"Alert.alert(",
			"\t'${1:alertTitle}?',",
			"\t'${2:deleteQuestion}?',",
			"\t[",
			"\t\t{",
			"\t\t\ttext: '${3:Cancel}',",
			"\t\t\tstyle: 'cancel',",
			"\t\t},",
			"\t\t{",
			"\t\t\ttext: '${4:Delete}',",
			"\t\t\tstyle: 'destructive',",
			"\t\t\tonPress: () => {",
			"\t\t\t\t$0",
			"\t\t\t},",
			"\t\t},",
			"\t],",
			");",
		],
	},
	"React conditionally-rendered component": {
		"prefix": "rcrc",
		"description": "Shell for conditionally rendering a React component",
		"body": [
			"{${1:condition} && (",
			"\t<${2:component} $0 />",
			")}",
		],
	},
	"React Native TouchableOpacity": {
		"prefix": "rnto",
		"description": "A React Native TouchableOpacity with style, onPress, and text",
		"body": [
			"<TouchableOpacity",
			"\tstyle={styles.${1:styleName}}",
			"\tonPress={${2:onPressHandler}}",
			">",
			"\t<Text>${3:textToShow}</Text>",
			"</TouchableOpacity>$0",
		],
	},
	"ES6 Function Declaration": {
		"prefix": "fn",
		"description": "A bare-bones ES6 function declaration",
		"body": [
			"const ${1:funcName} = ($2) => {",
			"\t$0",
			"};",
		],
	},
	"React Native style object": {
		"prefix": "rnso",
		"description": "An example of a style object to pass to StyleSheet.create()",
		"body": [
			"${1:objName}: {",
			"\t${2:style}: ${3:value},$0",
			"},",
		],
	},
	"React useEffect Async": {
		"prefix": "ruea",
		"description": "Stub useEffect that loads data asynchronously",
		"body": [
			"useEffect(() => {",
			"\t(async () => {",
			"\t\t$0",
			"\t})();",
			"}, []);",
		],
	},
	"React useState stub": {
		"prefix": "rus",
		"description": "A declaration of an item to maintain in state with useState()",
		"body": [
			"const [${1:stateVar}, ${2:stateFunc}] = useState(${3:initialState});",
		],
	},
}